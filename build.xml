<?xml version="1.0" encoding="UTF-8"?>
<project default="xar" name="existufe">
    
    <property name="project.app" value="existufe"/>
    <property name="build.dir" value="build"/>
    
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete file="expath-pkg.xml"/>
    </target>
    
    <target name="init">
        <mkdir dir="${build.dir}"/>
    </target>
    
    <target name="xar" depends="init,expath-pkg.xml">
        <zip destfile="${build.dir}/${project.app}-${project.version}.xar">
            <fileset dir=".">
                <include name="**/*.*"/>
                <exclude name="${build.dir}/**"/>
                <exclude name="logs/**"/>
                <exclude name="build.xml"/>              
                <exclude name="*.patch"/>
                <exclude name=".gitignore"/>
                <exclude name=".git"/>
                <exclude name=".github/**"/>
                <exclude name=".dockerignore"/>
                <exclude name="docker-compose.yml"/>
                <exclude name="*build.properties"/>
                <exclude name="*.template"/>
            </fileset>
        </zip>
    </target>
    
    <available file=".git" type="dir" property="git.present"/>

    <target name="git.revision" description="Store git revision in ${project.version}" if="git.present">
        <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
            <arg value="describe"/>
            <arg value="--tags"/>
            <arg value="--always"/>
            <arg value="HEAD"/>
        </exec>
        <condition property="project.version" value="${git.revision}" else="unknown">
            <and>
                <isset property="git.revision"/>
                <length string="${git.revision}" trim="yes" length="0" when="greater"/>
            </and>
        </condition>
        <echo message="${project.version}" />
    </target>

    <target name="expath-pkg.xml" depends="git.revision" description="build expath-pkg.xml from template">
        <copy file="expath-pkg.xml.template" tofile="expath-pkg.xml" overwrite="yes">
            <filterchain>
                <replacetokens>
                    <token key="repository.version" value="${project.version}" />
                </replacetokens>
            </filterchain>
        </copy>
    </target>
    
</project>
